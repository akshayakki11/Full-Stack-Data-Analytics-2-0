1. What is the name of the feature responsible for generating Regex objects?
The feature responsible for generating Regex objects is the re.compile() function in Python's re module.

2. Why do raw strings often appear in Regex objects?
Raw strings (r'') are often used in Regex objects to avoid unintended escape sequences. Raw strings treat backslashes (\) as literal characters, so they are particularly useful when defining regular expressions where backslashes are common, such as in file paths or escape sequences.

3. What is the return value of the search() method?
The search() method returns a Match object if the pattern is found in the string, or None if the pattern is not found.

4. From a Match item, how do you get the actual strings that match the pattern?
To get the actual strings that match the pattern from a Match object, you can use the group() method. group(0) returns the entire match, while group(1), group(2), etc., return the substrings matched by the corresponding capture groups in the regular expression.

5. In the regex which created from the r&#39;(\d\d\d)-(\d\d\d-\d\d\d\d)&#39;, what does group zero cover?
Group 2? Group 1?
In the regex r'(\d\d\d)-(\d\d\d-\d\d\d\d)', group 0 covers the entire match, group 1 covers the first three digits, and group 2 covers the remaining digits separated by hyphens.

6. In standard expression syntax, parentheses and intervals have distinct meanings. How can you tell
a regex that you want it to fit real parentheses and periods?
To fit real parentheses and periods in a regex pattern, you need to escape them with a backslash (\(, \), \.).

7. The findall() method returns a string list or a list of string tuples. What causes it to return one of
the two options?
The findall() method returns a list of all non-overlapping matches of the pattern in the string. If the pattern contains capturing groups, 
it returns a list of tuples where each tuple represents a match and contains the substrings matched by the capturing groups. Otherwise, it returns a list of strings representing the matched substrings.

8. In standard expressions, what does the | character mean?
In standard expressions, the | character represents the logical OR operator, allowing you to specify multiple alternatives in a pattern.

9. In regular expressions, what does the character stand for?
In regular expressions, the . character (dot) stands for any single character except newline.

10.In regular expressions, what is the difference between the + and * characters?
In regular expressions, the + character matches one or more occurrences of the preceding element, while the * character matches zero or more occurrences of the preceding element.

11. What is the difference between {4} and {4,5} in regular expression?
{4} matches exactly four occurrences of the preceding element, while {4,5} matches between four and five occurrences of the preceding element.

12. What do you mean by the \d, \w, and \s shorthand character classes signify in regular
expressions?
In regular expressions, the shorthand character classes \d, \w, and \s signify:

\d: Any digit (equivalent to [0-9]).
\w: Any alphanumeric character (equivalent to [a-zA-Z0-9_]).
\s: Any whitespace character (equivalent to [ \t\n\r\f\v]).

13. What do means by \D, \W, and \S shorthand character classes signify in regular expressions?
\D: Any non-digit character (equivalent to [^0-9]).
\W: Any non-alphanumeric character (equivalent to [^a-zA-Z0-9_]).
\S: Any non-whitespace character (equivalent to [^ \t\n\r\f\v]).

14. What is the difference between .*? and .*?
.*? is a non-greedy quantifier that matches any character (including newline characters) zero or more times, as few times as possible, while .* is a greedy quantifier that matches any character (including newline characters) zero or
more times, as many times as possible.

15. What is the syntax for matching both numbers and lowercase letters with a character class?
The syntax for matching both numbers and lowercase letters with a character class is [0-9a-z] or [a-z0-9].

16. What is the procedure for making a normal expression in regax case insensitive?
To make a normal expression in regex case insensitive, you can pass the re.IGNORECASE or re.I flag as the second argument to re.compile().

17. What does the . character normally match? What does it match if re.DOTALL is passed as 2nd
argument in re.compile()?
numRegex.sub('X', '11 drummers, 10 pipers, five rings, 4 hen') will return 'X drummers, X pipers, five rings, X hen'. The sub() method replaces all occurrences of the pattern \d+ (one or more digits) in the input string with the replacement string 'X'.

18. If numReg = re.compile(r&#39;\d+&#39;), what will numRegex.sub(&#39;X&#39;, &#39;11 drummers, 10 pipers, five rings, 4
hen&#39;) return?

19. What does passing re.VERBOSE as the 2nd argument to re.compile() allow to do?
Passing re.VERBOSE as the second argument to re.compile() allows you to write regular expressions in a more readable and organized format by ignoring whitespace and comments within the pattern.

20. How would you write a regex that match a number with comma for every three digits? It must
match the given following:
A regex that matches a number with a comma for every three digits is r'^\d{1,3}(,\d{3})*$'.

21. How would you write a regex that matches the full name of someone whose last name is
Watanabe? You can assume that the first name that comes before it will always be one word that
begins with a capital letter. The regex must match the following:
A regex that matches the full name of someone whose last name is Watanabe is r'[A-Z][a-zA-Z]*\sWatanabe'.

22. How would you write a regex that matches a sentence where the first word is either Alice, Bob,
or Carol; the second word is either eats, pets, or throws; the third word is apples, cats, or baseballs;
and the sentence ends with a period? This regex should be case-insensitive. It must match the
following:
A regex that matches a sentence with specific words and ends with a period is r'(Alice|Bob|Carol)\s(eats|pets|throws)\s(apples|cats|baseballs)\.'.




